SOCKET PROGRAMMING: First, we must know the concept of both the server and the client. 
A server is a software that waits for client requests and serves or processes them accordingly. On the other hand, a client is requester of this service. 
A client program request for some resources to the server and server responds to that request.

Socket programming is a way of connecting two nodes on a network to communicate with each other. 
Sockets (or socket programming) is a program that enables two sockets to send and receive data, bi-directionally, at any given moment. 
One socket (node) listens on a particular port at an IP, while other socket reaches out to the other to form a connection. 
Server forms the listener socket while client reaches out to the server. 
The primary socket API functions and methods in this module are:  socket()  bind()  listen()  accept()  connect()  send()  close()

STAGES:
The steps involved in establishing a socket on the client side are as follows:
1. Create a socket with the socket() system call
2. Connect the socket to the address of the server using the connect() system call
3. Send and receive data. There are a number of ways to do this, but the simplest is to use the read() and write() system calls. The steps involved in establishing a socket on the server side are as follows:
1. Create a socket with the socket() system call
2. Bind the socket to an address using the bind() system call. For a server socket on the Internet, an address consists of a port number on the host machine.
3. Listen for connections with the listen() system call
4. Accept a connection with the accept() system call. This call typically blocks until a client connects with the server.
5. Send and receive data.

CODE: We have to make two files, one for the server and another for client. 

SERVER: server.py 

import socket 
s=socket.socket(socket.AF_INET,sockt.SOCK_STREAM) 
s.bind((socket.gethostname(),1024)) 
s.listen(5) 
while True: 
  clt,adr=s.accept()
  print(f”Connection to (adr) established”) 
  clt.send(bytes(“Hello World”, “utf-8”)) 
  clt.close()
  
CLIENT: client.py 

import socket s=socket.socket(socket.AF_INET,sockt.SOCK_STREAM) 
s.connect((socket.gethostname(),1024)) 
complete_message= ‘ ’ 
while True: 
  msg=s.recv(5) 
  if len(msg)<=0: 
  break 
  complete_message += msg.decode(“utf-8”) 
print(complete_message)


GSM/GPRS: 
This a circuit used to establish a connection/communication between a mobile device/computing machine and a GSM/GPRS module. A module can be integrated within an equipment , generally it’s an embedded piece of hardware.
Global System for Mobile Communications(GSM) is an open and digital cellular technology used for the transmission of mobile voice and data services. It is now the default global standard for mobile communications. A GSM digitizes and compresses the data and sends it down through a channel with two different streams of client data, each in its own particular time slot. A GSM system  consists of different cells such as macro, micro, pico and umbrella cells. A GSM module provides features such as international roaming, SMS, fixed dialling number, real time clock with alarm management, improved spectrum efficiency, support for new services and many more.
 General Packet Radio Service is a packet oriented mobile data service on the 2G and 3G cellular communication network’s global system for mobile communication. In response of the earlier packet-switched cellular technologies GPRS was established. GPRS is sold according to the total volume of data transferred during the billing cycle. The GPRS system is an integrated part of the GSM network switching subsystem. It’s latency depends on the number of other users sharing the service concurrently. It provides moderate speed data transfer by using unused time division multiple access channels like the GSM system.


BRAIN WAVE SENSOR: Electroencephalography technology or EEG measures the difference in the electric field that is produced by neurotransmission in real time. The data is represented on a graph that is picked up by the electrodes due to the electrical field produced on the scalp. An Open BCI(Brain Computing Interface) was released that provided an open source bio sensing platform that allows the consumer to keep track of the electrical activity produced by the brain, heart and muscles. Using EEG technology many usually devices were created such as a headband which works by placing sensors along the forehead and behind the ears. The device is paired with an application that notes the electrical impulses read by the sensor. The application then determines if the user needs to become more focused  or not. If the wave increases in frequency then it indicates that the user is distracted from the given task and need to be more focused. As a feedback response ,the application increases the volume of the sound that the user is hearing in an attempt to regain the user’s focus.
In order to get the most the most accurate reading ,the electrodes need to be placed all  along the scalp and around the eyes as the impulses are spread across the skull.



MUSCLE SENSOR: Muscle sensors measures a person’s muscle activity through the electric potential of the muscle. This is also known as electromyography. When the brain sends signals to the muscle to flex, the motor units is recruited by the muscle and when a greater number of these motor units are synchronized it produces greater amount of electrical activity in the muscles. The sensor analyses this activity and produces output an analog signal which represents how hard a muscle can be flexed. The electrical signals produced generated by the muscles are the waveforms called raw EMG signal that is measured by the EMG sensor. The waveform contains a lot of information and is very useful. After obtaining the waveform it further needs to be processed and after all this processing an output voltage is obtained that depicts the amount of muscle activity.
 It is used to detect medical abnormalities, activation level or recruitment order or to analyse the biomechanics of human or animal movement. It is also used in gesture recognition that allows the input of physical action to a computer as a form of human-computer interaction.

